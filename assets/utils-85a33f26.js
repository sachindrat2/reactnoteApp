var e=Object.defineProperty,o=Object.defineProperties,t=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,l=(o,t,n)=>t in o?e(o,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[t]=n,a=(e,o)=>{for(var t in o||(o={}))r.call(o,t)&&l(e,t,o[t]);if(n)for(var t of n(o))s.call(o,t)&&l(e,t,o[t]);return e},c=(e,n)=>o(e,t(n)),i=(e,o,t)=>new Promise((n,r)=>{var s=e=>{try{a(t.next(e))}catch(o){r(o)}},l=e=>{try{a(t.throw(e))}catch(o){r(o)}},a=e=>e.done?n(e.value):Promise.resolve(e.value).then(s,l);a((t=t.apply(e,o)).next())});const d="https://ownnoteapp-hedxcahwcrhwb8hb.canadacentral-01.azurewebsites.net";console.log("🔄 API Service loaded - Version: 2.0.0 - Environment: Production");let u=new Map,p=0;const g=[e=>{const o=e.startsWith("http")?e:`https://${e}`;return console.log("🎯 Direct connection to:",o),o},e=>`https://api.codetabs.com/v1/proxy?quest=${encodeURIComponent(e)}`,e=>`https://api.allorigins.win/raw?url=${encodeURIComponent(e)}`,e=>`https://corsproxy.io/?${encodeURIComponent(e)}`,e=>`https://cors-anywhere.herokuapp.com/${e}`,e=>`https://thingproxy.freeboard.io/fetch/${encodeURIComponent(e)}`];let h=0;const y=(e=0)=>{if("localhost"===window.location.hostname)return"http://localhost:3001/api";if(e>=g.length)throw new Error("All CORS proxies failed");const o=(()=>{const e=d.startsWith("http")?d:`https://${d}`;return console.log("🔗 Backend URL:",e),e})(),t=g[e](o);return console.log(`🌐 getApiUrlWithFallback(${e}):`,{originalBackendUrl:d,absoluteBackendUrl:o,proxyIndex:e,result:t,currentLocation:window.location.href}),t},m="/token",f="/register",w="/logout",v="/notes",b=()=>{const e=localStorage.getItem("notesapp_user");if(!e)return console.log("🔑 No authentication data founds"),{"Content-Type":"application/json"};let o;try{o=JSON.parse(e)}catch(n){return console.error("Error parsing user data from localStorage:",n),localStorage.removeItem("notesapp_user"),{"Content-Type":"application/json"}}const t=o.access_token;return t?(console.log("🔑 Using access token for authentication"),console.log("   - Token preview:",t.substring(0,30)+"..."),{"Content-Type":"application/json",Authorization:`Bearer ${t}`}):(console.warn("� No access token found in user data"),{"Content-Type":"application/json"})},$=(e,...o)=>i(void 0,[e,...o],function*(e,o={}){const t=++p,n=`${o.method||"GET"}_${e}`;if(u.has(n))return console.log(`⏸️ Request ${t}: Duplicate ${n} detected, waiting for existing request...`),yield u.get(n);let r;if(console.log(`🚀 Request ${t}: Starting ${n} at ${(new Date).toISOString()}`),"localhost"!==window.location.hostname){const s=i(void 0,null,function*(){try{const u=[...Array(g.length).keys()];h>0&&(u.splice(h,1),u.unshift(h));for(let l=0;l<u.length;l++){const a=u[l];try{const r=y(a),s=`${r}${e}`;console.log(`🔄 Trying proxy ${a+1}/${g.length} (${0===a?"direct":"proxy"}):`,{baseUrl:r,endpoint:e,finalUrl:s,currentLocation:window.location.href});const l=yield k(s,o,e);return console.log(`Proxy ${a+1} succeeded - caching for future use`),console.log(`✅ Request ${t}: ${n} completed successfully`),h=a,l}catch(s){if(console.log(`Proxy ${a+1} failed:`,s.message),r=s,s.message.includes("CORS")||s.message.includes("Failed to fetch")||s.message.includes("timeout")||s.message.includes("ERR_FAILED")||s.message.includes("net::")||"TypeError"===s.name)continue;break}}if("/token"===e||"/register"===e){console.log("🔄 All proxies failed, trying no-cors mode for authentication...");try{const t=`${d}${e}`,n=yield((e,...o)=>i(void 0,[e,...o],function*(e,o={}){console.log("🔄 Trying no-cors mode as final fallback...");try{const t=yield fetch(e,c(a({},o),{mode:"no-cors",credentials:"omit"}));return"opaque"===t.type?(console.log("✅ no-cors request succeeded (opaque response)"),{success:!0,opaque:!0}):t}catch(s){throw console.log("❌ no-cors request also failed:",s.message),s}}))(t,o);if(n.success&&n.opaque)return{success:!0,opaque:!0,message:"Request sent successfully (response not readable due to CORS)"}}catch(l){console.log("❌ no-cors fallback also failed:",l.message)}}throw console.error("🚨 All proxy attempts failed. This is likely due to CORS restrictions."),console.log("💡 To fix this permanently, the backend server needs to add CORS headers for:",window.location.origin),console.log(`❌ Request ${t}: ${n} failed completely`),new Error("Connection failed: Unable to reach the server through any available proxy. The backend server may need to enable CORS for this domain.")}finally{u.delete(n)}});return u.set(n,s),yield s}{const s=i(void 0,null,function*(){try{const r="localhost"===window.location.hostname?"http://localhost:3001/api":g[0](d),s=`${r}${e}`;console.log("🏠 Localhost request:",{baseUrl:r,endpoint:e,url:s});const l=yield k(s,o,e);return console.log(`✅ Request ${t}: ${n} completed successfully`),l}catch(s){console.log("❌ Local CORS proxy failed, trying production proxies:",s.message);for(let a=0;a<g.length;a++)try{const r=`${y(a)}${e}`;console.log(`🔄 Trying fallback proxy ${a+1}:`,r);const s=yield k(r,o,e);return console.log(`✅ Fallback proxy ${a+1} succeeded`),console.log(`✅ Request ${t}: ${n} completed successfully`),s}catch(l){console.log(`❌ Fallback proxy ${a+1} failed:`,l.message),r=l}throw console.log(`❌ Request ${t}: ${n} failed completely`),r||s}finally{u.delete(n)}});return u.set(n,s),yield s}}),k=(e,...o)=>i(void 0,[e,...o],function*(e,o={},t){var n;const r=a({headers:a(a(c(a({},b()),{Accept:"application/json"}),o.body&&!(null==(n=o.headers)?void 0:n["Content-Type"])?{"Content-Type":"application/json"}:{}),o.headers),mode:"cors",credentials:"omit",cache:"no-cache"},o),s=new Promise((e,o)=>{setTimeout(()=>o(new Error("Request timeout")),15e3)});try{const o=yield Promise.race([fetch(e,r),s]);console.log("Response Status:",o.status);const n=o.headers.get("content-type");let a;try{if(n&&n.includes("application/json"))a=yield o.json();else{const e=yield o.text();if(e&&""!==e.trim())try{a=JSON.parse(e)}catch(l){a=e}else a=null}}catch(i){console.error("Error parsing response:",i),a=null}if(console.log("Processed Response Data:",a),!o.ok){if(console.error("API Error Response:",{status:o.status,statusText:o.statusText,url:e,data:a}),401===o.status)throw console.log("🚫 401 Unauthorized - clearing auth and triggering event"),console.log("🧹 Clearing invalid token from localStorage after 401"),localStorage.removeItem("notesapp_user"),console.log("� Dispatching token expiration event due to 401 error"),window.dispatchEvent(new CustomEvent("auth:token-expired",{detail:{reason:"API returned 401 Unauthorized",endpoint:t,url:e}})),new Error("401: Unauthorized - Session expired");if("/token"===t&&a&&(a.access_token||"object"==typeof a&&null!==a&&Object.keys(a).length>0))return console.log("Token endpoint returned error status but has valid data, treating as success"),a;const n=(null==a?void 0:a.detail)||(null==a?void 0:a.message)||a||`HTTP error! status: ${o.status} ${o.statusText}`;throw new Error(n)}return a}catch(d){if(console.error("API request failed:",d),(e=>{const o=e.toString().toLowerCase();return["CORS","Cross-Origin","Access-Control","No 'Access-Control-Allow-Origin'","has been blocked by CORS policy","preflight"].some(e=>o.includes(e.toLowerCase()))})(d))throw console.error("🚨 CORS Error Detected:",d.message),new Error("CORS_ERROR: Unable to connect to server due to CORS policy restrictions. Please check your network connection and try again.");if("TypeError"===d.name&&d.message.includes("Failed to fetch"))throw console.error("🌐 Network Error - unable to connect to server"),new Error("NETWORK_ERROR: Unable to connect to server. Please check your internet connection and try again.");if(d.message.includes("timeout"))throw console.error("⏰ Request Timeout - server too slow"),new Error("TIMEOUT_ERROR: Server is taking too long to respond (>30 seconds). Please check your connection or try again later.");throw d}}),R={login:(e,o)=>i(void 0,null,function*(){const t=new URLSearchParams;return t.append("username",e),t.append("password",o),console.log("Login attempt with:",{email:e,password:o?"[HIDDEN]":"EMPTY"}),console.log("Form data:",t.toString()),$(m,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t.toString()})}),register:(e,o)=>i(void 0,null,function*(){console.log("Register attempt with:",{username:e,password:o?"[HIDDEN]":"EMPTY"});const t={username:e,password:o};return console.log("Registration payload:",{username:t.username,password:"[HIDDEN]"}),$(f,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}),logout:()=>i(void 0,null,function*(){return $(w,{method:"POST"})})},S={getAllNotes:()=>i(void 0,null,function*(){var e,o;console.log("📋 Fetching all notes...");const t=JSON.parse(localStorage.getItem("notesapp_user")||"{}");console.log("👤 Current user for notes fetch:",{email:(null==(e=t.user)?void 0:e.email)||t.email,id:(null==(o=t.user)?void 0:o.id)||t.id,hasToken:!(!t.access_token&&!t.token)});const n=yield $(v,{method:"GET"});return console.log("📋 getAllNotes API result:",n),n}),createNote:e=>i(void 0,null,function*(){return console.log("📝 Creating note with data:",e),$(v,{method:"POST",body:JSON.stringify(e)})}),updateNote:(e,o)=>i(void 0,null,function*(){return $(`${v}/${e}`,{method:"PUT",body:JSON.stringify(o)})}),deleteNote:e=>i(void 0,null,function*(){return $(`${v}/${e}`,{method:"DELETE"})}),getNoteById:e=>i(void 0,null,function*(){return $(`${v}/${e}`,{method:"GET"})})},O=e=>{if(console.log("🔍 Handling API error:",e.message),e.message.includes("401")||e.message.includes("Unauthorized")){console.log("🚫 401 error detected - token expired or invalid");const e=localStorage.getItem("notesapp_user");if(e)try{const o=JSON.parse(e);(o.access_token||o.token)&&(console.log("🧹 Clearing expired/invalid token from localStorage"),localStorage.removeItem("notesapp_user"),console.log("� Dispatching token expiration event due to 401 in handleAPIError"),window.dispatchEvent(new CustomEvent("auth:token-expired",{detail:{reason:"Token expired or invalid (401 error)"}})))}catch(o){console.error("Error parsing stored user data during 401 handling:",o),localStorage.removeItem("notesapp_user")}return"Your session has expired. Please login again."}return e.message.includes("Network error")||e.message.includes("Failed to fetch")?"Unable to connect to server. Please check your internet connection and try again.":e.message.includes("CORS")?"Connection blocked by browser security. Please try refreshing the page.":e.message||"An unexpected error occurred."};export{R as a,O as h,S as n};
